<?php
/*
Plugin Name: Three.js Project Embed
Description: Embeds a Three.js project in a page or post.
Version: 1.0
*/

function embed_threejs_project() {
  echo "
    <!-- three test embed htmlsnippet wordpress -->
    <div class='canvas-container'>
        <canvas id='canvas'></canvas>
    </div>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/three@0.138.0/examples/js/controls/OrbitControls.js'></script><!-- Include fflate.min.js -->
    <script src='https://cdn.jsdelivr.net/npm/three@0.138.0/examples/js/loaders/GLTFLoader.js'></script>
    <script>
        const canvas = document.getElementById('canvas');

        var scene = new THREE.Scene();

        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 5;

        var renderer = new THREE.WebGLRenderer({canvas:canvas, alpha: true});
        renderer.setClearColor( 0x000000, 0 ); // the default
        renderer.setSize(window.innerWidth * 0.8, window.innerHeight * 0.8);
        renderer.setPixelRatio(window.devicePixelRatio); // for mobile devices

        // Load a GLTF model
        var loader = new THREE.GLTFLoader();
        loader.load('http://lavitz.local/wp-content/uploads/2024/09/Tree.glb', function(gltf) {
            var model = gltf.scene;
            
            // Optionally, scale or position the model
            model.scale.set(.5, .5, .5); // Adjust size
            model.position.y = -1; // Adjust position
            scene.add(model);

            // Clone the model and create multiple instances
            for (let i = -5; i <= 5; i++) {
                var clone = model.clone();   // Clone the original model
                clone.position.set(i * 2, -1, 0); // Position the clone (change position to avoid overlap)
                scene.add(clone);
            }
        }, undefined, function(error) {
            console.error('An error occurred while loading the model', error);
        });

        // 4. Light
        var ambientLight = new THREE.AmbientLight(0xffffff, 1);
        scene.add(ambientLight);

        // Add OrbitControls
        var controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.enableDamping = true; // Optional: Smooth movement
        controls.dampingFactor = 0.25;
        controls.enableZoom = true;
        controls.enablePan = true;

        var animate = function () {
            requestAnimationFrame(animate);
            controls.update(); // Required if enableDamping or autoRotate are used
            renderer.render(scene, camera);
        };
        animate();
    </script>";
}

add_shortcode('threejs_project', 'embed_threejs_project');